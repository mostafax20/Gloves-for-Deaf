
Gloves For Deaf V1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000862  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000008b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000008b6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000008e8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000128  00000000  00000000  00000924  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001ca4  00000000  00000000  00000a4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008bb  00000000  00000000  000026f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000cc9  00000000  00000000  00002fab  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000022c  00000000  00000000  00003c74  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005c5  00000000  00000000  00003ea0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000b2c  00000000  00000000  00004465  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d8  00000000  00000000  00004f91  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 e0 03 	call	0x7c0	; 0x7c0 <main>
  64:	0c 94 2f 04 	jmp	0x85e	; 0x85e <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <ADC_init>:
#include "ADC_interface.h"

void ADC_init(void)
{
		/*Reference volt AVCC (AREF (6=0,7=0) ,internal (6=1,7=1))*/
		SET_BIT(ADMUX,6);
  6c:	87 b1       	in	r24, 0x07	; 7
  6e:	80 64       	ori	r24, 0x40	; 64
  70:	87 b9       	out	0x07, r24	; 7
		CLR_BIT(ADMUX,7);
  72:	87 b1       	in	r24, 0x07	; 7
  74:	8f 77       	andi	r24, 0x7F	; 127
  76:	87 b9       	out	0x07, r24	; 7
		CLR_BIT(ADMUX,5);//select to the right adjust
  78:	87 b1       	in	r24, 0x07	; 7
  7a:	8f 7d       	andi	r24, 0xDF	; 223
  7c:	87 b9       	out	0x07, r24	; 7
		CLR_BIT(ADCSRA,5);//Disable Auto Trigger (single mode conversion)
  7e:	86 b1       	in	r24, 0x06	; 6
  80:	8f 7d       	andi	r24, 0xDF	; 223
  82:	86 b9       	out	0x06, r24	; 6
		CLR_BIT(ADCSRA,3);//ADC interrupt Disable		
  84:	86 b1       	in	r24, 0x06	; 6
  86:	87 7f       	andi	r24, 0xF7	; 247
  88:	86 b9       	out	0x06, r24	; 6
		/*ADC Prescaler 128 for 16MHZ (125KHZ)*/
		SET_BIT(ADCSRA,0);
  8a:	86 b1       	in	r24, 0x06	; 6
  8c:	81 60       	ori	r24, 0x01	; 1
  8e:	86 b9       	out	0x06, r24	; 6
		SET_BIT(ADCSRA,1);
  90:	86 b1       	in	r24, 0x06	; 6
  92:	82 60       	ori	r24, 0x02	; 2
  94:	86 b9       	out	0x06, r24	; 6
		SET_BIT(ADCSRA,2);
  96:	86 b1       	in	r24, 0x06	; 6
  98:	84 60       	ori	r24, 0x04	; 4
  9a:	86 b9       	out	0x06, r24	; 6
		
		
		SET_BIT(ADCSRA,7);//ADC Enable
  9c:	86 b1       	in	r24, 0x06	; 6
  9e:	80 68       	ori	r24, 0x80	; 128
  a0:	86 b9       	out	0x06, r24	; 6
  a2:	08 95       	ret

000000a4 <DIO_SetPinDirection>:
			case DIO_PORTC:
			TOG_BIT(PORTC,PinId);
			break;
			
			case DIO_PORTD:
			TOG_BIT(PORTD,PinId);
  a4:	84 30       	cpi	r24, 0x04	; 4
  a6:	08 f0       	brcs	.+2      	; 0xaa <DIO_SetPinDirection+0x6>
  a8:	72 c0       	rjmp	.+228    	; 0x18e <DIO_SetPinDirection+0xea>
  aa:	68 30       	cpi	r22, 0x08	; 8
  ac:	08 f0       	brcs	.+2      	; 0xb0 <DIO_SetPinDirection+0xc>
  ae:	6f c0       	rjmp	.+222    	; 0x18e <DIO_SetPinDirection+0xea>
  b0:	42 30       	cpi	r20, 0x02	; 2
  b2:	08 f0       	brcs	.+2      	; 0xb6 <DIO_SetPinDirection+0x12>
  b4:	6c c0       	rjmp	.+216    	; 0x18e <DIO_SetPinDirection+0xea>
  b6:	81 30       	cpi	r24, 0x01	; 1
  b8:	01 f1       	breq	.+64     	; 0xfa <DIO_SetPinDirection+0x56>
  ba:	30 f0       	brcs	.+12     	; 0xc8 <DIO_SetPinDirection+0x24>
  bc:	82 30       	cpi	r24, 0x02	; 2
  be:	b1 f1       	breq	.+108    	; 0x12c <DIO_SetPinDirection+0x88>
  c0:	83 30       	cpi	r24, 0x03	; 3
  c2:	09 f4       	brne	.+2      	; 0xc6 <DIO_SetPinDirection+0x22>
  c4:	4c c0       	rjmp	.+152    	; 0x15e <DIO_SetPinDirection+0xba>
  c6:	08 95       	ret
  c8:	41 30       	cpi	r20, 0x01	; 1
  ca:	59 f4       	brne	.+22     	; 0xe2 <DIO_SetPinDirection+0x3e>
  cc:	2a b3       	in	r18, 0x1a	; 26
  ce:	81 e0       	ldi	r24, 0x01	; 1
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	02 c0       	rjmp	.+4      	; 0xd8 <DIO_SetPinDirection+0x34>
  d4:	88 0f       	add	r24, r24
  d6:	99 1f       	adc	r25, r25
  d8:	6a 95       	dec	r22
  da:	e2 f7       	brpl	.-8      	; 0xd4 <DIO_SetPinDirection+0x30>
  dc:	82 2b       	or	r24, r18
  de:	8a bb       	out	0x1a, r24	; 26
  e0:	08 95       	ret
  e2:	2a b3       	in	r18, 0x1a	; 26
  e4:	81 e0       	ldi	r24, 0x01	; 1
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	02 c0       	rjmp	.+4      	; 0xee <DIO_SetPinDirection+0x4a>
  ea:	88 0f       	add	r24, r24
  ec:	99 1f       	adc	r25, r25
  ee:	6a 95       	dec	r22
  f0:	e2 f7       	brpl	.-8      	; 0xea <DIO_SetPinDirection+0x46>
  f2:	80 95       	com	r24
  f4:	82 23       	and	r24, r18
  f6:	8a bb       	out	0x1a, r24	; 26
  f8:	08 95       	ret
  fa:	41 30       	cpi	r20, 0x01	; 1
  fc:	59 f4       	brne	.+22     	; 0x114 <DIO_SetPinDirection+0x70>
  fe:	27 b3       	in	r18, 0x17	; 23
 100:	81 e0       	ldi	r24, 0x01	; 1
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	02 c0       	rjmp	.+4      	; 0x10a <DIO_SetPinDirection+0x66>
 106:	88 0f       	add	r24, r24
 108:	99 1f       	adc	r25, r25
 10a:	6a 95       	dec	r22
 10c:	e2 f7       	brpl	.-8      	; 0x106 <DIO_SetPinDirection+0x62>
 10e:	82 2b       	or	r24, r18
 110:	87 bb       	out	0x17, r24	; 23
 112:	08 95       	ret
 114:	27 b3       	in	r18, 0x17	; 23
 116:	81 e0       	ldi	r24, 0x01	; 1
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	02 c0       	rjmp	.+4      	; 0x120 <DIO_SetPinDirection+0x7c>
 11c:	88 0f       	add	r24, r24
 11e:	99 1f       	adc	r25, r25
 120:	6a 95       	dec	r22
 122:	e2 f7       	brpl	.-8      	; 0x11c <DIO_SetPinDirection+0x78>
 124:	80 95       	com	r24
 126:	82 23       	and	r24, r18
 128:	87 bb       	out	0x17, r24	; 23
 12a:	08 95       	ret
 12c:	41 30       	cpi	r20, 0x01	; 1
 12e:	59 f4       	brne	.+22     	; 0x146 <DIO_SetPinDirection+0xa2>
 130:	24 b3       	in	r18, 0x14	; 20
 132:	81 e0       	ldi	r24, 0x01	; 1
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	02 c0       	rjmp	.+4      	; 0x13c <DIO_SetPinDirection+0x98>
 138:	88 0f       	add	r24, r24
 13a:	99 1f       	adc	r25, r25
 13c:	6a 95       	dec	r22
 13e:	e2 f7       	brpl	.-8      	; 0x138 <DIO_SetPinDirection+0x94>
 140:	82 2b       	or	r24, r18
 142:	84 bb       	out	0x14, r24	; 20
 144:	08 95       	ret
 146:	24 b3       	in	r18, 0x14	; 20
 148:	81 e0       	ldi	r24, 0x01	; 1
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	02 c0       	rjmp	.+4      	; 0x152 <DIO_SetPinDirection+0xae>
 14e:	88 0f       	add	r24, r24
 150:	99 1f       	adc	r25, r25
 152:	6a 95       	dec	r22
 154:	e2 f7       	brpl	.-8      	; 0x14e <DIO_SetPinDirection+0xaa>
 156:	80 95       	com	r24
 158:	82 23       	and	r24, r18
 15a:	84 bb       	out	0x14, r24	; 20
 15c:	08 95       	ret
 15e:	41 30       	cpi	r20, 0x01	; 1
 160:	59 f4       	brne	.+22     	; 0x178 <DIO_SetPinDirection+0xd4>
 162:	21 b3       	in	r18, 0x11	; 17
 164:	81 e0       	ldi	r24, 0x01	; 1
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	02 c0       	rjmp	.+4      	; 0x16e <DIO_SetPinDirection+0xca>
 16a:	88 0f       	add	r24, r24
 16c:	99 1f       	adc	r25, r25
 16e:	6a 95       	dec	r22
 170:	e2 f7       	brpl	.-8      	; 0x16a <DIO_SetPinDirection+0xc6>
 172:	82 2b       	or	r24, r18
 174:	81 bb       	out	0x11, r24	; 17
 176:	08 95       	ret
 178:	21 b3       	in	r18, 0x11	; 17
 17a:	81 e0       	ldi	r24, 0x01	; 1
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	02 c0       	rjmp	.+4      	; 0x184 <DIO_SetPinDirection+0xe0>
 180:	88 0f       	add	r24, r24
 182:	99 1f       	adc	r25, r25
 184:	6a 95       	dec	r22
 186:	e2 f7       	brpl	.-8      	; 0x180 <DIO_SetPinDirection+0xdc>
 188:	80 95       	com	r24
 18a:	82 23       	and	r24, r18
 18c:	81 bb       	out	0x11, r24	; 17
 18e:	08 95       	ret

00000190 <DIO_SetPinValue>:
 190:	84 30       	cpi	r24, 0x04	; 4
 192:	08 f0       	brcs	.+2      	; 0x196 <DIO_SetPinValue+0x6>
 194:	72 c0       	rjmp	.+228    	; 0x27a <DIO_SetPinValue+0xea>
 196:	68 30       	cpi	r22, 0x08	; 8
 198:	08 f0       	brcs	.+2      	; 0x19c <DIO_SetPinValue+0xc>
 19a:	6f c0       	rjmp	.+222    	; 0x27a <DIO_SetPinValue+0xea>
 19c:	42 30       	cpi	r20, 0x02	; 2
 19e:	08 f0       	brcs	.+2      	; 0x1a2 <DIO_SetPinValue+0x12>
 1a0:	6c c0       	rjmp	.+216    	; 0x27a <DIO_SetPinValue+0xea>
 1a2:	81 30       	cpi	r24, 0x01	; 1
 1a4:	01 f1       	breq	.+64     	; 0x1e6 <DIO_SetPinValue+0x56>
 1a6:	30 f0       	brcs	.+12     	; 0x1b4 <DIO_SetPinValue+0x24>
 1a8:	82 30       	cpi	r24, 0x02	; 2
 1aa:	b1 f1       	breq	.+108    	; 0x218 <DIO_SetPinValue+0x88>
 1ac:	83 30       	cpi	r24, 0x03	; 3
 1ae:	09 f4       	brne	.+2      	; 0x1b2 <DIO_SetPinValue+0x22>
 1b0:	4c c0       	rjmp	.+152    	; 0x24a <DIO_SetPinValue+0xba>
 1b2:	08 95       	ret
 1b4:	41 30       	cpi	r20, 0x01	; 1
 1b6:	59 f4       	brne	.+22     	; 0x1ce <DIO_SetPinValue+0x3e>
 1b8:	2b b3       	in	r18, 0x1b	; 27
 1ba:	81 e0       	ldi	r24, 0x01	; 1
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	02 c0       	rjmp	.+4      	; 0x1c4 <DIO_SetPinValue+0x34>
 1c0:	88 0f       	add	r24, r24
 1c2:	99 1f       	adc	r25, r25
 1c4:	6a 95       	dec	r22
 1c6:	e2 f7       	brpl	.-8      	; 0x1c0 <DIO_SetPinValue+0x30>
 1c8:	82 2b       	or	r24, r18
 1ca:	8b bb       	out	0x1b, r24	; 27
 1cc:	08 95       	ret
 1ce:	2b b3       	in	r18, 0x1b	; 27
 1d0:	81 e0       	ldi	r24, 0x01	; 1
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	02 c0       	rjmp	.+4      	; 0x1da <DIO_SetPinValue+0x4a>
 1d6:	88 0f       	add	r24, r24
 1d8:	99 1f       	adc	r25, r25
 1da:	6a 95       	dec	r22
 1dc:	e2 f7       	brpl	.-8      	; 0x1d6 <DIO_SetPinValue+0x46>
 1de:	80 95       	com	r24
 1e0:	82 23       	and	r24, r18
 1e2:	8b bb       	out	0x1b, r24	; 27
 1e4:	08 95       	ret
 1e6:	41 30       	cpi	r20, 0x01	; 1
 1e8:	59 f4       	brne	.+22     	; 0x200 <DIO_SetPinValue+0x70>
 1ea:	28 b3       	in	r18, 0x18	; 24
 1ec:	81 e0       	ldi	r24, 0x01	; 1
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	02 c0       	rjmp	.+4      	; 0x1f6 <DIO_SetPinValue+0x66>
 1f2:	88 0f       	add	r24, r24
 1f4:	99 1f       	adc	r25, r25
 1f6:	6a 95       	dec	r22
 1f8:	e2 f7       	brpl	.-8      	; 0x1f2 <DIO_SetPinValue+0x62>
 1fa:	82 2b       	or	r24, r18
 1fc:	88 bb       	out	0x18, r24	; 24
 1fe:	08 95       	ret
 200:	28 b3       	in	r18, 0x18	; 24
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	02 c0       	rjmp	.+4      	; 0x20c <DIO_SetPinValue+0x7c>
 208:	88 0f       	add	r24, r24
 20a:	99 1f       	adc	r25, r25
 20c:	6a 95       	dec	r22
 20e:	e2 f7       	brpl	.-8      	; 0x208 <DIO_SetPinValue+0x78>
 210:	80 95       	com	r24
 212:	82 23       	and	r24, r18
 214:	88 bb       	out	0x18, r24	; 24
 216:	08 95       	ret
 218:	41 30       	cpi	r20, 0x01	; 1
 21a:	59 f4       	brne	.+22     	; 0x232 <DIO_SetPinValue+0xa2>
 21c:	25 b3       	in	r18, 0x15	; 21
 21e:	81 e0       	ldi	r24, 0x01	; 1
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	02 c0       	rjmp	.+4      	; 0x228 <DIO_SetPinValue+0x98>
 224:	88 0f       	add	r24, r24
 226:	99 1f       	adc	r25, r25
 228:	6a 95       	dec	r22
 22a:	e2 f7       	brpl	.-8      	; 0x224 <DIO_SetPinValue+0x94>
 22c:	82 2b       	or	r24, r18
 22e:	85 bb       	out	0x15, r24	; 21
 230:	08 95       	ret
 232:	25 b3       	in	r18, 0x15	; 21
 234:	81 e0       	ldi	r24, 0x01	; 1
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	02 c0       	rjmp	.+4      	; 0x23e <DIO_SetPinValue+0xae>
 23a:	88 0f       	add	r24, r24
 23c:	99 1f       	adc	r25, r25
 23e:	6a 95       	dec	r22
 240:	e2 f7       	brpl	.-8      	; 0x23a <DIO_SetPinValue+0xaa>
 242:	80 95       	com	r24
 244:	82 23       	and	r24, r18
 246:	85 bb       	out	0x15, r24	; 21
 248:	08 95       	ret
 24a:	41 30       	cpi	r20, 0x01	; 1
 24c:	59 f4       	brne	.+22     	; 0x264 <DIO_SetPinValue+0xd4>
 24e:	22 b3       	in	r18, 0x12	; 18
 250:	81 e0       	ldi	r24, 0x01	; 1
 252:	90 e0       	ldi	r25, 0x00	; 0
 254:	02 c0       	rjmp	.+4      	; 0x25a <DIO_SetPinValue+0xca>
 256:	88 0f       	add	r24, r24
 258:	99 1f       	adc	r25, r25
 25a:	6a 95       	dec	r22
 25c:	e2 f7       	brpl	.-8      	; 0x256 <DIO_SetPinValue+0xc6>
 25e:	82 2b       	or	r24, r18
 260:	82 bb       	out	0x12, r24	; 18
 262:	08 95       	ret
 264:	22 b3       	in	r18, 0x12	; 18
 266:	81 e0       	ldi	r24, 0x01	; 1
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	02 c0       	rjmp	.+4      	; 0x270 <DIO_SetPinValue+0xe0>
 26c:	88 0f       	add	r24, r24
 26e:	99 1f       	adc	r25, r25
 270:	6a 95       	dec	r22
 272:	e2 f7       	brpl	.-8      	; 0x26c <DIO_SetPinValue+0xdc>
 274:	80 95       	com	r24
 276:	82 23       	and	r24, r18
 278:	82 bb       	out	0x12, r24	; 18
 27a:	08 95       	ret

0000027c <DIO_SetPortDirection>:
		}
	}
}
void DIO_SetPortDirection(u8 PortId,u8 PortDirection)
{
	switch(PortId)
 27c:	81 30       	cpi	r24, 0x01	; 1
 27e:	69 f0       	breq	.+26     	; 0x29a <DIO_SetPortDirection+0x1e>
 280:	28 f0       	brcs	.+10     	; 0x28c <DIO_SetPortDirection+0x10>
 282:	82 30       	cpi	r24, 0x02	; 2
 284:	89 f0       	breq	.+34     	; 0x2a8 <DIO_SetPortDirection+0x2c>
 286:	83 30       	cpi	r24, 0x03	; 3
 288:	b1 f0       	breq	.+44     	; 0x2b6 <DIO_SetPortDirection+0x3a>
 28a:	08 95       	ret
	{
		case DIO_PORTA:
		if(PortDirection==DIO_PORT_OUTPUT)
 28c:	6f 3f       	cpi	r22, 0xFF	; 255
 28e:	19 f4       	brne	.+6      	; 0x296 <DIO_SetPortDirection+0x1a>
		DDRA=0xff;
 290:	8f ef       	ldi	r24, 0xFF	; 255
 292:	8a bb       	out	0x1a, r24	; 26
 294:	08 95       	ret
		else
		DDRA=0x00;
 296:	1a ba       	out	0x1a, r1	; 26
 298:	08 95       	ret
		break;
		
		case DIO_PORTB:
		if(PortDirection==DIO_PORT_OUTPUT)
 29a:	6f 3f       	cpi	r22, 0xFF	; 255
 29c:	19 f4       	brne	.+6      	; 0x2a4 <DIO_SetPortDirection+0x28>
		DDRB=0xff;
 29e:	8f ef       	ldi	r24, 0xFF	; 255
 2a0:	87 bb       	out	0x17, r24	; 23
 2a2:	08 95       	ret
		else
		DDRB=0x00;
 2a4:	17 ba       	out	0x17, r1	; 23
 2a6:	08 95       	ret
		break;
		
		case DIO_PORTC:
		if(PortDirection==DIO_PORT_OUTPUT)
 2a8:	6f 3f       	cpi	r22, 0xFF	; 255
 2aa:	19 f4       	brne	.+6      	; 0x2b2 <DIO_SetPortDirection+0x36>
		DDRC=0xff;
 2ac:	8f ef       	ldi	r24, 0xFF	; 255
 2ae:	84 bb       	out	0x14, r24	; 20
 2b0:	08 95       	ret
		else
		DDRC=0x00;
 2b2:	14 ba       	out	0x14, r1	; 20
 2b4:	08 95       	ret
		break;
		
		case DIO_PORTD:
		if(PortDirection==DIO_PORT_OUTPUT)
 2b6:	6f 3f       	cpi	r22, 0xFF	; 255
 2b8:	19 f4       	brne	.+6      	; 0x2c0 <DIO_SetPortDirection+0x44>
		DDRD=0xff;
 2ba:	8f ef       	ldi	r24, 0xFF	; 255
 2bc:	81 bb       	out	0x11, r24	; 17
 2be:	08 95       	ret
		else
		DDRD=0x00;
 2c0:	11 ba       	out	0x11, r1	; 17
 2c2:	08 95       	ret

000002c4 <EEPROM_Write_Byte>:


void EEPROM_Write_Byte(u8 address,u8 value)
{
	
		while( GET_BIT(EECR,1)==1 );  /* POLLING WITH BLOCKING to wait until the EEWE is cleared */
 2c4:	e1 99       	sbic	0x1c, 1	; 28
 2c6:	fe cf       	rjmp	.-4      	; 0x2c4 <EEPROM_Write_Byte>
	
		EEAR_u16 = address;
 2c8:	90 e0       	ldi	r25, 0x00	; 0
 2ca:	9f bb       	out	0x1f, r25	; 31
 2cc:	8e bb       	out	0x1e, r24	; 30
												//EECR |= (1<<EERE);
	
	
		EEDR = value;
 2ce:	6d bb       	out	0x1d, r22	; 29
		SET_BIT(EECR,2);						//EECR |= (1<<EEMWE);
 2d0:	8c b3       	in	r24, 0x1c	; 28
 2d2:	84 60       	ori	r24, 0x04	; 4
 2d4:	8c bb       	out	0x1c, r24	; 28
		SET_BIT(EECR,1);						//EECR |= (1<<EEWE);
 2d6:	8c b3       	in	r24, 0x1c	; 28
 2d8:	82 60       	ori	r24, 0x02	; 2
 2da:	8c bb       	out	0x1c, r24	; 28
 2dc:	08 95       	ret

000002de <EEPROM_Read_Byte>:
}

void EEPROM_Read_Byte(u8 address,u8 *value)
{
	
	while( GET_BIT(EECR,1)==1 );
 2de:	e1 99       	sbic	0x1c, 1	; 28
 2e0:	fe cf       	rjmp	.-4      	; 0x2de <EEPROM_Read_Byte>
	

	EEAR_u16 = address;
 2e2:	90 e0       	ldi	r25, 0x00	; 0
 2e4:	9f bb       	out	0x1f, r25	; 31
 2e6:	8e bb       	out	0x1e, r24	; 30

	SET_BIT(EECR,0);							//EECR |= (1<<EERE);
 2e8:	8c b3       	in	r24, 0x1c	; 28
 2ea:	81 60       	ori	r24, 0x01	; 1
 2ec:	8c bb       	out	0x1c, r24	; 28
	

	*value = EEDR;
 2ee:	8d b3       	in	r24, 0x1d	; 29
 2f0:	fb 01       	movw	r30, r22
 2f2:	80 83       	st	Z, r24
 2f4:	08 95       	ret

000002f6 <PRIVATE_WriteHalfPort>:
		{
			LCD_sendChar((Local_reversed%10)+'0');
			Local_reversed /= 10;
		}while (Local_reversed != 1);
	}
}
 2f6:	cf 93       	push	r28
 2f8:	c8 2f       	mov	r28, r24
 2fa:	48 2f       	mov	r20, r24
 2fc:	41 70       	andi	r20, 0x01	; 1
 2fe:	64 e0       	ldi	r22, 0x04	; 4
 300:	82 e0       	ldi	r24, 0x02	; 2
 302:	0e 94 c8 00 	call	0x190	; 0x190 <DIO_SetPinValue>
 306:	c1 fb       	bst	r28, 1
 308:	44 27       	eor	r20, r20
 30a:	40 f9       	bld	r20, 0
 30c:	65 e0       	ldi	r22, 0x05	; 5
 30e:	82 e0       	ldi	r24, 0x02	; 2
 310:	0e 94 c8 00 	call	0x190	; 0x190 <DIO_SetPinValue>
 314:	c2 fb       	bst	r28, 2
 316:	44 27       	eor	r20, r20
 318:	40 f9       	bld	r20, 0
 31a:	66 e0       	ldi	r22, 0x06	; 6
 31c:	82 e0       	ldi	r24, 0x02	; 2
 31e:	0e 94 c8 00 	call	0x190	; 0x190 <DIO_SetPinValue>
 322:	c3 fb       	bst	r28, 3
 324:	44 27       	eor	r20, r20
 326:	40 f9       	bld	r20, 0
 328:	67 e0       	ldi	r22, 0x07	; 7
 32a:	82 e0       	ldi	r24, 0x02	; 2
 32c:	0e 94 c8 00 	call	0x190	; 0x190 <DIO_SetPinValue>
 330:	cf 91       	pop	r28
 332:	08 95       	ret

00000334 <LCD_sendCmnd>:
 334:	cf 93       	push	r28
 336:	c8 2f       	mov	r28, r24
 338:	40 e0       	ldi	r20, 0x00	; 0
 33a:	61 e0       	ldi	r22, 0x01	; 1
 33c:	81 e0       	ldi	r24, 0x01	; 1
 33e:	0e 94 c8 00 	call	0x190	; 0x190 <DIO_SetPinValue>
 342:	40 e0       	ldi	r20, 0x00	; 0
 344:	62 e0       	ldi	r22, 0x02	; 2
 346:	81 e0       	ldi	r24, 0x01	; 1
 348:	0e 94 c8 00 	call	0x190	; 0x190 <DIO_SetPinValue>
 34c:	8c 2f       	mov	r24, r28
 34e:	82 95       	swap	r24
 350:	8f 70       	andi	r24, 0x0F	; 15
 352:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <PRIVATE_WriteHalfPort>
 356:	41 e0       	ldi	r20, 0x01	; 1
 358:	63 e0       	ldi	r22, 0x03	; 3
 35a:	81 e0       	ldi	r24, 0x01	; 1
 35c:	0e 94 c8 00 	call	0x190	; 0x190 <DIO_SetPinValue>
 360:	8f e9       	ldi	r24, 0x9F	; 159
 362:	9f e0       	ldi	r25, 0x0F	; 15
 364:	01 97       	sbiw	r24, 0x01	; 1
 366:	f1 f7       	brne	.-4      	; 0x364 <LCD_sendCmnd+0x30>
 368:	00 c0       	rjmp	.+0      	; 0x36a <LCD_sendCmnd+0x36>
 36a:	00 00       	nop
 36c:	40 e0       	ldi	r20, 0x00	; 0
 36e:	63 e0       	ldi	r22, 0x03	; 3
 370:	81 e0       	ldi	r24, 0x01	; 1
 372:	0e 94 c8 00 	call	0x190	; 0x190 <DIO_SetPinValue>
 376:	8c 2f       	mov	r24, r28
 378:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <PRIVATE_WriteHalfPort>
 37c:	41 e0       	ldi	r20, 0x01	; 1
 37e:	63 e0       	ldi	r22, 0x03	; 3
 380:	81 e0       	ldi	r24, 0x01	; 1
 382:	0e 94 c8 00 	call	0x190	; 0x190 <DIO_SetPinValue>
 386:	8f e9       	ldi	r24, 0x9F	; 159
 388:	9f e0       	ldi	r25, 0x0F	; 15
 38a:	01 97       	sbiw	r24, 0x01	; 1
 38c:	f1 f7       	brne	.-4      	; 0x38a <LCD_sendCmnd+0x56>
 38e:	00 c0       	rjmp	.+0      	; 0x390 <LCD_sendCmnd+0x5c>
 390:	00 00       	nop
 392:	40 e0       	ldi	r20, 0x00	; 0
 394:	63 e0       	ldi	r22, 0x03	; 3
 396:	81 e0       	ldi	r24, 0x01	; 1
 398:	0e 94 c8 00 	call	0x190	; 0x190 <DIO_SetPinValue>
 39c:	cf 91       	pop	r28
 39e:	08 95       	ret

000003a0 <LCD_init>:
 3a0:	2f e7       	ldi	r18, 0x7F	; 127
 3a2:	85 eb       	ldi	r24, 0xB5	; 181
 3a4:	91 e0       	ldi	r25, 0x01	; 1
 3a6:	21 50       	subi	r18, 0x01	; 1
 3a8:	80 40       	sbci	r24, 0x00	; 0
 3aa:	90 40       	sbci	r25, 0x00	; 0
 3ac:	e1 f7       	brne	.-8      	; 0x3a6 <LCD_init+0x6>
 3ae:	00 c0       	rjmp	.+0      	; 0x3b0 <LCD_init+0x10>
 3b0:	00 00       	nop
 3b2:	40 e0       	ldi	r20, 0x00	; 0
 3b4:	61 e0       	ldi	r22, 0x01	; 1
 3b6:	81 e0       	ldi	r24, 0x01	; 1
 3b8:	0e 94 c8 00 	call	0x190	; 0x190 <DIO_SetPinValue>
 3bc:	40 e0       	ldi	r20, 0x00	; 0
 3be:	62 e0       	ldi	r22, 0x02	; 2
 3c0:	81 e0       	ldi	r24, 0x01	; 1
 3c2:	0e 94 c8 00 	call	0x190	; 0x190 <DIO_SetPinValue>
 3c6:	82 e0       	ldi	r24, 0x02	; 2
 3c8:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <PRIVATE_WriteHalfPort>
 3cc:	41 e0       	ldi	r20, 0x01	; 1
 3ce:	63 e0       	ldi	r22, 0x03	; 3
 3d0:	81 e0       	ldi	r24, 0x01	; 1
 3d2:	0e 94 c8 00 	call	0x190	; 0x190 <DIO_SetPinValue>
 3d6:	8f e9       	ldi	r24, 0x9F	; 159
 3d8:	9f e0       	ldi	r25, 0x0F	; 15
 3da:	01 97       	sbiw	r24, 0x01	; 1
 3dc:	f1 f7       	brne	.-4      	; 0x3da <LCD_init+0x3a>
 3de:	00 c0       	rjmp	.+0      	; 0x3e0 <LCD_init+0x40>
 3e0:	00 00       	nop
 3e2:	40 e0       	ldi	r20, 0x00	; 0
 3e4:	63 e0       	ldi	r22, 0x03	; 3
 3e6:	81 e0       	ldi	r24, 0x01	; 1
 3e8:	0e 94 c8 00 	call	0x190	; 0x190 <DIO_SetPinValue>
 3ec:	88 e2       	ldi	r24, 0x28	; 40
 3ee:	0e 94 9a 01 	call	0x334	; 0x334 <LCD_sendCmnd>
 3f2:	90 ee       	ldi	r25, 0xE0	; 224
 3f4:	9a 95       	dec	r25
 3f6:	f1 f7       	brne	.-4      	; 0x3f4 <LCD_init+0x54>
 3f8:	8f e0       	ldi	r24, 0x0F	; 15
 3fa:	0e 94 9a 01 	call	0x334	; 0x334 <LCD_sendCmnd>
 3fe:	20 ee       	ldi	r18, 0xE0	; 224
 400:	2a 95       	dec	r18
 402:	f1 f7       	brne	.-4      	; 0x400 <__EEPROM_REGION_LENGTH__>
 404:	81 e0       	ldi	r24, 0x01	; 1
 406:	0e 94 9a 01 	call	0x334	; 0x334 <LCD_sendCmnd>
 40a:	8f ef       	ldi	r24, 0xFF	; 255
 40c:	98 e1       	ldi	r25, 0x18	; 24
 40e:	01 97       	sbiw	r24, 0x01	; 1
 410:	f1 f7       	brne	.-4      	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 412:	00 c0       	rjmp	.+0      	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 414:	00 00       	nop
 416:	86 e0       	ldi	r24, 0x06	; 6
 418:	0e 94 9a 01 	call	0x334	; 0x334 <LCD_sendCmnd>
 41c:	08 95       	ret

0000041e <LCD_sendChar>:
 41e:	cf 93       	push	r28
 420:	c8 2f       	mov	r28, r24
 422:	41 e0       	ldi	r20, 0x01	; 1
 424:	61 e0       	ldi	r22, 0x01	; 1
 426:	81 e0       	ldi	r24, 0x01	; 1
 428:	0e 94 c8 00 	call	0x190	; 0x190 <DIO_SetPinValue>
 42c:	40 e0       	ldi	r20, 0x00	; 0
 42e:	62 e0       	ldi	r22, 0x02	; 2
 430:	81 e0       	ldi	r24, 0x01	; 1
 432:	0e 94 c8 00 	call	0x190	; 0x190 <DIO_SetPinValue>
 436:	8c 2f       	mov	r24, r28
 438:	82 95       	swap	r24
 43a:	8f 70       	andi	r24, 0x0F	; 15
 43c:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <PRIVATE_WriteHalfPort>
 440:	41 e0       	ldi	r20, 0x01	; 1
 442:	63 e0       	ldi	r22, 0x03	; 3
 444:	81 e0       	ldi	r24, 0x01	; 1
 446:	0e 94 c8 00 	call	0x190	; 0x190 <DIO_SetPinValue>
 44a:	8f e9       	ldi	r24, 0x9F	; 159
 44c:	9f e0       	ldi	r25, 0x0F	; 15
 44e:	01 97       	sbiw	r24, 0x01	; 1
 450:	f1 f7       	brne	.-4      	; 0x44e <LCD_sendChar+0x30>
 452:	00 c0       	rjmp	.+0      	; 0x454 <LCD_sendChar+0x36>
 454:	00 00       	nop
 456:	40 e0       	ldi	r20, 0x00	; 0
 458:	63 e0       	ldi	r22, 0x03	; 3
 45a:	81 e0       	ldi	r24, 0x01	; 1
 45c:	0e 94 c8 00 	call	0x190	; 0x190 <DIO_SetPinValue>
 460:	8c 2f       	mov	r24, r28
 462:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <PRIVATE_WriteHalfPort>
 466:	41 e0       	ldi	r20, 0x01	; 1
 468:	63 e0       	ldi	r22, 0x03	; 3
 46a:	81 e0       	ldi	r24, 0x01	; 1
 46c:	0e 94 c8 00 	call	0x190	; 0x190 <DIO_SetPinValue>
 470:	8f e9       	ldi	r24, 0x9F	; 159
 472:	9f e0       	ldi	r25, 0x0F	; 15
 474:	01 97       	sbiw	r24, 0x01	; 1
 476:	f1 f7       	brne	.-4      	; 0x474 <LCD_sendChar+0x56>
 478:	00 c0       	rjmp	.+0      	; 0x47a <LCD_sendChar+0x5c>
 47a:	00 00       	nop
 47c:	40 e0       	ldi	r20, 0x00	; 0
 47e:	63 e0       	ldi	r22, 0x03	; 3
 480:	81 e0       	ldi	r24, 0x01	; 1
 482:	0e 94 c8 00 	call	0x190	; 0x190 <DIO_SetPinValue>
 486:	cf 91       	pop	r28
 488:	08 95       	ret

0000048a <LCD_goToSpecificPosition>:
void LCD_goToSpecificPosition(u8 LineNumber, u8 Position)
{
	if(LineNumber == LCD_LINE_ONE)
 48a:	81 30       	cpi	r24, 0x01	; 1
 48c:	39 f4       	brne	.+14     	; 0x49c <LCD_goToSpecificPosition+0x12>
	{
		if(Position <= 15)
 48e:	60 31       	cpi	r22, 0x10	; 16
 490:	68 f4       	brcc	.+26     	; 0x4ac <LCD_goToSpecificPosition+0x22>
		{
			LCD_sendCmnd(0x80 + Position);
 492:	80 e8       	ldi	r24, 0x80	; 128
 494:	86 0f       	add	r24, r22
 496:	0e 94 9a 01 	call	0x334	; 0x334 <LCD_sendCmnd>
 49a:	08 95       	ret
		}
	}

	else if (LineNumber == LCD_LINE_TWO)
 49c:	82 30       	cpi	r24, 0x02	; 2
 49e:	31 f4       	brne	.+12     	; 0x4ac <LCD_goToSpecificPosition+0x22>
	{
		if(Position <= 15)
 4a0:	60 31       	cpi	r22, 0x10	; 16
 4a2:	20 f4       	brcc	.+8      	; 0x4ac <LCD_goToSpecificPosition+0x22>
		{
			LCD_sendCmnd(0xc0 + Position);
 4a4:	80 ec       	ldi	r24, 0xC0	; 192
 4a6:	86 0f       	add	r24, r22
 4a8:	0e 94 9a 01 	call	0x334	; 0x334 <LCD_sendCmnd>
 4ac:	08 95       	ret

000004ae <LCD_display>:
		}
	}
}

void LCD_display(u8*string)
{
 4ae:	ef 92       	push	r14
 4b0:	ff 92       	push	r15
 4b2:	0f 93       	push	r16
 4b4:	1f 93       	push	r17
 4b6:	cf 93       	push	r28
 4b8:	df 93       	push	r29
 4ba:	7c 01       	movw	r14, r24
	u8 check = -1;
	if((string[16] != ' ') || (string[16] != '\0'))
	{
		for(u8 j = 16; j > 0; j--)
 4bc:	d0 e1       	ldi	r29, 0x10	; 16
 4be:	1e c0       	rjmp	.+60     	; 0x4fc <LCD_display+0x4e>
		{
			if(string[j] = ' ')
 4c0:	80 e2       	ldi	r24, 0x20	; 32
 4c2:	f7 01       	movw	r30, r14
 4c4:	ed 0f       	add	r30, r29
 4c6:	f1 1d       	adc	r31, r1
 4c8:	80 83       	st	Z, r24
			{
				check = j;
			}
		u8 counter=0;
 4ca:	c0 e0       	ldi	r28, 0x00	; 0
		while (string[counter]!='\0')
 4cc:	0f c0       	rjmp	.+30     	; 0x4ec <LCD_display+0x3e>
		{	
			if(counter == check)
 4ce:	dc 13       	cpse	r29, r28
 4d0:	0a c0       	rjmp	.+20     	; 0x4e6 <LCD_display+0x38>
			{
				LCD_goToSpecificPosition(2, 0);
 4d2:	60 e0       	ldi	r22, 0x00	; 0
 4d4:	82 e0       	ldi	r24, 0x02	; 2
 4d6:	0e 94 45 02 	call	0x48a	; 0x48a <LCD_goToSpecificPosition>
				LCD_sendChar(string[counter]);
 4da:	f8 01       	movw	r30, r16
 4dc:	80 81       	ld	r24, Z
 4de:	0e 94 0f 02 	call	0x41e	; 0x41e <LCD_sendChar>
				++counter;
 4e2:	cf 5f       	subi	r28, 0xFF	; 255
 4e4:	03 c0       	rjmp	.+6      	; 0x4ec <LCD_display+0x3e>
			}
			else
			{
				LCD_sendChar(string[counter]);
 4e6:	0e 94 0f 02 	call	0x41e	; 0x41e <LCD_sendChar>
				++counter;
 4ea:	cf 5f       	subi	r28, 0xFF	; 255
			if(string[j] = ' ')
			{
				check = j;
			}
		u8 counter=0;
		while (string[counter]!='\0')
 4ec:	87 01       	movw	r16, r14
 4ee:	0c 0f       	add	r16, r28
 4f0:	11 1d       	adc	r17, r1
 4f2:	f8 01       	movw	r30, r16
 4f4:	80 81       	ld	r24, Z
 4f6:	81 11       	cpse	r24, r1
 4f8:	ea cf       	rjmp	.-44     	; 0x4ce <LCD_display+0x20>
void LCD_display(u8*string)
{
	u8 check = -1;
	if((string[16] != ' ') || (string[16] != '\0'))
	{
		for(u8 j = 16; j > 0; j--)
 4fa:	d1 50       	subi	r29, 0x01	; 1
 4fc:	d1 11       	cpse	r29, r1
 4fe:	e0 cf       	rjmp	.-64     	; 0x4c0 <LCD_display+0x12>
				++counter;
			}
		}
		}
	}
}
 500:	df 91       	pop	r29
 502:	cf 91       	pop	r28
 504:	1f 91       	pop	r17
 506:	0f 91       	pop	r16
 508:	ff 90       	pop	r15
 50a:	ef 90       	pop	r14
 50c:	08 95       	ret

0000050e <savingSentences>:
	}
}

void savingSentences()
{
	EEPROM_Write_Byte(0,'I');
 50e:	69 e4       	ldi	r22, 0x49	; 73
 510:	80 e0       	ldi	r24, 0x00	; 0
 512:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(1,' ');
 516:	60 e2       	ldi	r22, 0x20	; 32
 518:	81 e0       	ldi	r24, 0x01	; 1
 51a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(2,'L');
 51e:	6c e4       	ldi	r22, 0x4C	; 76
 520:	82 e0       	ldi	r24, 0x02	; 2
 522:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(3,'o');
 526:	6f e6       	ldi	r22, 0x6F	; 111
 528:	83 e0       	ldi	r24, 0x03	; 3
 52a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(4,'v');
 52e:	66 e7       	ldi	r22, 0x76	; 118
 530:	84 e0       	ldi	r24, 0x04	; 4
 532:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(5,'e');
 536:	65 e6       	ldi	r22, 0x65	; 101
 538:	85 e0       	ldi	r24, 0x05	; 5
 53a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(6,' ');
 53e:	60 e2       	ldi	r22, 0x20	; 32
 540:	86 e0       	ldi	r24, 0x06	; 6
 542:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(7,'Y');
 546:	69 e5       	ldi	r22, 0x59	; 89
 548:	87 e0       	ldi	r24, 0x07	; 7
 54a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(8,'o');
 54e:	6f e6       	ldi	r22, 0x6F	; 111
 550:	88 e0       	ldi	r24, 0x08	; 8
 552:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(9,'u');
 556:	65 e7       	ldi	r22, 0x75	; 117
 558:	89 e0       	ldi	r24, 0x09	; 9
 55a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	
	EEPROM_Write_Byte(10,'G');
 55e:	67 e4       	ldi	r22, 0x47	; 71
 560:	8a e0       	ldi	r24, 0x0A	; 10
 562:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(11,'o');
 566:	6f e6       	ldi	r22, 0x6F	; 111
 568:	8b e0       	ldi	r24, 0x0B	; 11
 56a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(12,'o');
 56e:	6f e6       	ldi	r22, 0x6F	; 111
 570:	8c e0       	ldi	r24, 0x0C	; 12
 572:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(13,'d');
 576:	64 e6       	ldi	r22, 0x64	; 100
 578:	8d e0       	ldi	r24, 0x0D	; 13
 57a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(14,' ');
 57e:	60 e2       	ldi	r22, 0x20	; 32
 580:	8e e0       	ldi	r24, 0x0E	; 14
 582:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(15,'J');
 586:	6a e4       	ldi	r22, 0x4A	; 74
 588:	8f e0       	ldi	r24, 0x0F	; 15
 58a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(16,'o');
 58e:	6f e6       	ldi	r22, 0x6F	; 111
 590:	80 e1       	ldi	r24, 0x10	; 16
 592:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(17,'b');
 596:	62 e6       	ldi	r22, 0x62	; 98
 598:	81 e1       	ldi	r24, 0x11	; 17
 59a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	
	EEPROM_Write_Byte(18,'I');
 59e:	69 e4       	ldi	r22, 0x49	; 73
 5a0:	82 e1       	ldi	r24, 0x12	; 18
 5a2:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(19,' ');
 5a6:	60 e2       	ldi	r22, 0x20	; 32
 5a8:	83 e1       	ldi	r24, 0x13	; 19
 5aa:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(20,'w');
 5ae:	67 e7       	ldi	r22, 0x77	; 119
 5b0:	84 e1       	ldi	r24, 0x14	; 20
 5b2:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(21,'a');
 5b6:	61 e6       	ldi	r22, 0x61	; 97
 5b8:	85 e1       	ldi	r24, 0x15	; 21
 5ba:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(22,'t');
 5be:	64 e7       	ldi	r22, 0x74	; 116
 5c0:	86 e1       	ldi	r24, 0x16	; 22
 5c2:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(23,'c');
 5c6:	63 e6       	ldi	r22, 0x63	; 99
 5c8:	87 e1       	ldi	r24, 0x17	; 23
 5ca:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(24,'h');
 5ce:	68 e6       	ldi	r22, 0x68	; 104
 5d0:	88 e1       	ldi	r24, 0x18	; 24
 5d2:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(25,' ');
 5d6:	60 e2       	ldi	r22, 0x20	; 32
 5d8:	89 e1       	ldi	r24, 0x19	; 25
 5da:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(27,'y');
 5de:	69 e7       	ldi	r22, 0x79	; 121
 5e0:	8b e1       	ldi	r24, 0x1B	; 27
 5e2:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(28,'o');
 5e6:	6f e6       	ldi	r22, 0x6F	; 111
 5e8:	8c e1       	ldi	r24, 0x1C	; 28
 5ea:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(29,'u');
 5ee:	65 e7       	ldi	r22, 0x75	; 117
 5f0:	8d e1       	ldi	r24, 0x1D	; 29
 5f2:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	
	EEPROM_Write_Byte(30,'T');
 5f6:	64 e5       	ldi	r22, 0x54	; 84
 5f8:	8e e1       	ldi	r24, 0x1E	; 30
 5fa:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(31,'h');
 5fe:	68 e6       	ldi	r22, 0x68	; 104
 600:	8f e1       	ldi	r24, 0x1F	; 31
 602:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(32,'a');
 606:	61 e6       	ldi	r22, 0x61	; 97
 608:	80 e2       	ldi	r24, 0x20	; 32
 60a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(33,'t');
 60e:	64 e7       	ldi	r22, 0x74	; 116
 610:	81 e2       	ldi	r24, 0x21	; 33
 612:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(34,' ');
 616:	60 e2       	ldi	r22, 0x20	; 32
 618:	82 e2       	ldi	r24, 0x22	; 34
 61a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(35,'i');
 61e:	69 e6       	ldi	r22, 0x69	; 105
 620:	83 e2       	ldi	r24, 0x23	; 35
 622:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(36,'s');
 626:	63 e7       	ldi	r22, 0x73	; 115
 628:	84 e2       	ldi	r24, 0x24	; 36
 62a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(37,' ');
 62e:	60 e2       	ldi	r22, 0x20	; 32
 630:	85 e2       	ldi	r24, 0x25	; 37
 632:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(38,'f');
 636:	66 e6       	ldi	r22, 0x66	; 102
 638:	86 e2       	ldi	r24, 0x26	; 38
 63a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(39,'a');
 63e:	61 e6       	ldi	r22, 0x61	; 97
 640:	87 e2       	ldi	r24, 0x27	; 39
 642:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(40,'n');
 646:	6e e6       	ldi	r22, 0x6E	; 110
 648:	88 e2       	ldi	r24, 0x28	; 40
 64a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(41,'t');
 64e:	64 e7       	ldi	r22, 0x74	; 116
 650:	89 e2       	ldi	r24, 0x29	; 41
 652:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(42,'a');
 656:	61 e6       	ldi	r22, 0x61	; 97
 658:	8a e2       	ldi	r24, 0x2A	; 42
 65a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(43,'s');
 65e:	63 e7       	ldi	r22, 0x73	; 115
 660:	8b e2       	ldi	r24, 0x2B	; 43
 662:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(44,'t');
 666:	64 e7       	ldi	r22, 0x74	; 116
 668:	8c e2       	ldi	r24, 0x2C	; 44
 66a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(45,'i');
 66e:	69 e6       	ldi	r22, 0x69	; 105
 670:	8d e2       	ldi	r24, 0x2D	; 45
 672:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(46,'c');
 676:	63 e6       	ldi	r22, 0x63	; 99
 678:	8e e2       	ldi	r24, 0x2E	; 46
 67a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	
	EEPROM_Write_Byte(47,'I');
 67e:	69 e4       	ldi	r22, 0x49	; 73
 680:	8f e2       	ldi	r24, 0x2F	; 47
 682:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(48,' ');
 686:	60 e2       	ldi	r22, 0x20	; 32
 688:	80 e3       	ldi	r24, 0x30	; 48
 68a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(49,'w');
 68e:	67 e7       	ldi	r22, 0x77	; 119
 690:	81 e3       	ldi	r24, 0x31	; 49
 692:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(50,'i');
 696:	69 e6       	ldi	r22, 0x69	; 105
 698:	82 e3       	ldi	r24, 0x32	; 50
 69a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(51,'s');
 69e:	63 e7       	ldi	r22, 0x73	; 115
 6a0:	83 e3       	ldi	r24, 0x33	; 51
 6a2:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(52,'h');
 6a6:	68 e6       	ldi	r22, 0x68	; 104
 6a8:	84 e3       	ldi	r24, 0x34	; 52
 6aa:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(53,' ');
 6ae:	60 e2       	ldi	r22, 0x20	; 32
 6b0:	85 e3       	ldi	r24, 0x35	; 53
 6b2:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(54,'y');
 6b6:	69 e7       	ldi	r22, 0x79	; 121
 6b8:	86 e3       	ldi	r24, 0x36	; 54
 6ba:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(55,'o');
 6be:	6f e6       	ldi	r22, 0x6F	; 111
 6c0:	87 e3       	ldi	r24, 0x37	; 55
 6c2:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(56,'u');
 6c6:	65 e7       	ldi	r22, 0x75	; 117
 6c8:	88 e3       	ldi	r24, 0x38	; 56
 6ca:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(57,' ');
 6ce:	60 e2       	ldi	r22, 0x20	; 32
 6d0:	89 e3       	ldi	r24, 0x39	; 57
 6d2:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(58,'g');
 6d6:	67 e6       	ldi	r22, 0x67	; 103
 6d8:	8a e3       	ldi	r24, 0x3A	; 58
 6da:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(59,'o');
 6de:	6f e6       	ldi	r22, 0x6F	; 111
 6e0:	8b e3       	ldi	r24, 0x3B	; 59
 6e2:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(60,'o');
 6e6:	6f e6       	ldi	r22, 0x6F	; 111
 6e8:	8c e3       	ldi	r24, 0x3C	; 60
 6ea:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(61,'d');
 6ee:	64 e6       	ldi	r22, 0x64	; 100
 6f0:	8d e3       	ldi	r24, 0x3D	; 61
 6f2:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(62,' ');
 6f6:	60 e2       	ldi	r22, 0x20	; 32
 6f8:	8e e3       	ldi	r24, 0x3E	; 62
 6fa:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(63,'l');
 6fe:	6c e6       	ldi	r22, 0x6C	; 108
 700:	8f e3       	ldi	r24, 0x3F	; 63
 702:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(64,'i');
 706:	69 e6       	ldi	r22, 0x69	; 105
 708:	80 e4       	ldi	r24, 0x40	; 64
 70a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(65,'f');
 70e:	66 e6       	ldi	r22, 0x66	; 102
 710:	81 e4       	ldi	r24, 0x41	; 65
 712:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(67,'e');
 716:	65 e6       	ldi	r22, 0x65	; 101
 718:	83 e4       	ldi	r24, 0x43	; 67
 71a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	
	EEPROM_Write_Byte(68,'I');
 71e:	69 e4       	ldi	r22, 0x49	; 73
 720:	84 e4       	ldi	r24, 0x44	; 68
 722:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(69,' ');
 726:	60 e2       	ldi	r22, 0x20	; 32
 728:	85 e4       	ldi	r24, 0x45	; 69
 72a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(70,'r');
 72e:	62 e7       	ldi	r22, 0x72	; 114
 730:	86 e4       	ldi	r24, 0x46	; 70
 732:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(71,'e');
 736:	65 e6       	ldi	r22, 0x65	; 101
 738:	87 e4       	ldi	r24, 0x47	; 71
 73a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(72,'a');
 73e:	61 e6       	ldi	r22, 0x61	; 97
 740:	88 e4       	ldi	r24, 0x48	; 72
 742:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(73,'l');
 746:	6c e6       	ldi	r22, 0x6C	; 108
 748:	89 e4       	ldi	r24, 0x49	; 73
 74a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(74,'l');
 74e:	6c e6       	ldi	r22, 0x6C	; 108
 750:	8a e4       	ldi	r24, 0x4A	; 74
 752:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(75,'y');
 756:	69 e7       	ldi	r22, 0x79	; 121
 758:	8b e4       	ldi	r24, 0x4B	; 75
 75a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(76,' ');
 75e:	60 e2       	ldi	r22, 0x20	; 32
 760:	8c e4       	ldi	r24, 0x4C	; 76
 762:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(78,'l');
 766:	6c e6       	ldi	r22, 0x6C	; 108
 768:	8e e4       	ldi	r24, 0x4E	; 78
 76a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(79,'o');
 76e:	6f e6       	ldi	r22, 0x6F	; 111
 770:	8f e4       	ldi	r24, 0x4F	; 79
 772:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(80,'v');
 776:	66 e7       	ldi	r22, 0x76	; 118
 778:	80 e5       	ldi	r24, 0x50	; 80
 77a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(81,'e');
 77e:	65 e6       	ldi	r22, 0x65	; 101
 780:	81 e5       	ldi	r24, 0x51	; 81
 782:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(82,' ');
 786:	60 e2       	ldi	r22, 0x20	; 32
 788:	82 e5       	ldi	r24, 0x52	; 82
 78a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(83,'y');
 78e:	69 e7       	ldi	r22, 0x79	; 121
 790:	83 e5       	ldi	r24, 0x53	; 83
 792:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(84,'o');
 796:	6f e6       	ldi	r22, 0x6F	; 111
 798:	84 e5       	ldi	r24, 0x54	; 84
 79a:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(85,'u');
 79e:	65 e7       	ldi	r22, 0x75	; 117
 7a0:	85 e5       	ldi	r24, 0x55	; 85
 7a2:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	
	EEPROM_Write_Byte(86,'Y');
 7a6:	69 e5       	ldi	r22, 0x59	; 89
 7a8:	86 e5       	ldi	r24, 0x56	; 86
 7aa:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(87,'o');
 7ae:	6f e6       	ldi	r22, 0x6F	; 111
 7b0:	87 e5       	ldi	r24, 0x57	; 87
 7b2:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
	EEPROM_Write_Byte(88,'u');
 7b6:	65 e7       	ldi	r22, 0x75	; 117
 7b8:	88 e5       	ldi	r24, 0x58	; 88
 7ba:	0e 94 62 01 	call	0x2c4	; 0x2c4 <EEPROM_Write_Byte>
 7be:	08 95       	ret

000007c0 <main>:

void savingSentences(void);

int main(void)

{
 7c0:	cf 93       	push	r28
 7c2:	df 93       	push	r29
 7c4:	cd b7       	in	r28, 0x3d	; 61
 7c6:	de b7       	in	r29, 0x3e	; 62
 7c8:	62 97       	sbiw	r28, 0x12	; 18
 7ca:	0f b6       	in	r0, 0x3f	; 63
 7cc:	f8 94       	cli
 7ce:	de bf       	out	0x3e, r29	; 62
 7d0:	0f be       	out	0x3f, r0	; 63
 7d2:	cd bf       	out	0x3d, r28	; 61
	/*ADC PINS*/
	DIO_SetPortDirection(DIO_PORTA,DIO_PORT_INPUT);
 7d4:	60 e0       	ldi	r22, 0x00	; 0
 7d6:	80 e0       	ldi	r24, 0x00	; 0
 7d8:	0e 94 3e 01 	call	0x27c	; 0x27c <DIO_SetPortDirection>
	
	/*LCD PINS*/
	 DIO_SetPinDirection(DIO_PORTC,DIO_PIN4,DIO_PIN_OUTPUT);
 7dc:	41 e0       	ldi	r20, 0x01	; 1
 7de:	64 e0       	ldi	r22, 0x04	; 4
 7e0:	82 e0       	ldi	r24, 0x02	; 2
 7e2:	0e 94 52 00 	call	0xa4	; 0xa4 <DIO_SetPinDirection>
	 DIO_SetPinDirection(DIO_PORTC,DIO_PIN5,DIO_PIN_OUTPUT);
 7e6:	41 e0       	ldi	r20, 0x01	; 1
 7e8:	65 e0       	ldi	r22, 0x05	; 5
 7ea:	82 e0       	ldi	r24, 0x02	; 2
 7ec:	0e 94 52 00 	call	0xa4	; 0xa4 <DIO_SetPinDirection>
	 DIO_SetPinDirection(DIO_PORTC,DIO_PIN6,DIO_PIN_OUTPUT);
 7f0:	41 e0       	ldi	r20, 0x01	; 1
 7f2:	66 e0       	ldi	r22, 0x06	; 6
 7f4:	82 e0       	ldi	r24, 0x02	; 2
 7f6:	0e 94 52 00 	call	0xa4	; 0xa4 <DIO_SetPinDirection>
	 DIO_SetPinDirection(DIO_PORTC,DIO_PIN7,DIO_PIN_OUTPUT);
 7fa:	41 e0       	ldi	r20, 0x01	; 1
 7fc:	67 e0       	ldi	r22, 0x07	; 7
 7fe:	82 e0       	ldi	r24, 0x02	; 2
 800:	0e 94 52 00 	call	0xa4	; 0xa4 <DIO_SetPinDirection>
	 DIO_SetPinDirection(DIO_PORTB,DIO_PIN1,DIO_PIN_OUTPUT);
 804:	41 e0       	ldi	r20, 0x01	; 1
 806:	61 e0       	ldi	r22, 0x01	; 1
 808:	81 e0       	ldi	r24, 0x01	; 1
 80a:	0e 94 52 00 	call	0xa4	; 0xa4 <DIO_SetPinDirection>
	 DIO_SetPinDirection(DIO_PORTB,DIO_PIN2,DIO_PIN_OUTPUT);
 80e:	41 e0       	ldi	r20, 0x01	; 1
 810:	62 e0       	ldi	r22, 0x02	; 2
 812:	81 e0       	ldi	r24, 0x01	; 1
 814:	0e 94 52 00 	call	0xa4	; 0xa4 <DIO_SetPinDirection>
	 DIO_SetPinDirection(DIO_PORTB,DIO_PIN3,DIO_PIN_OUTPUT);
 818:	41 e0       	ldi	r20, 0x01	; 1
 81a:	63 e0       	ldi	r22, 0x03	; 3
 81c:	81 e0       	ldi	r24, 0x01	; 1
 81e:	0e 94 52 00 	call	0xa4	; 0xa4 <DIO_SetPinDirection>
	
	LCD_init();
 822:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <LCD_init>
	savingSentences();
 826:	0e 94 87 02 	call	0x50e	; 0x50e <savingSentences>
	
	u8 st[18];
	st[18] = '\0';
 82a:	1b 8a       	std	Y+19, r1	; 0x13
	for(u8 i = 0; i <= 16; i++)
 82c:	10 e0       	ldi	r17, 0x00	; 0
 82e:	0e c0       	rjmp	.+28     	; 0x84c <__DATA_REGION_LENGTH__+0x4c>
	{
		st[i] = EEPROM_Read_Byte(i+30);
 830:	e1 2e       	mov	r14, r17
 832:	f1 2c       	mov	r15, r1
 834:	8e e1       	ldi	r24, 0x1E	; 30
 836:	81 0f       	add	r24, r17
 838:	0e 94 6f 01 	call	0x2de	; 0x2de <EEPROM_Read_Byte>
 83c:	e1 e0       	ldi	r30, 0x01	; 1
 83e:	f0 e0       	ldi	r31, 0x00	; 0
 840:	ec 0f       	add	r30, r28
 842:	fd 1f       	adc	r31, r29
 844:	ee 0d       	add	r30, r14
 846:	ff 1d       	adc	r31, r15
 848:	80 83       	st	Z, r24
	LCD_init();
	savingSentences();
	
	u8 st[18];
	st[18] = '\0';
	for(u8 i = 0; i <= 16; i++)
 84a:	1f 5f       	subi	r17, 0xFF	; 255
 84c:	11 31       	cpi	r17, 0x11	; 17
 84e:	80 f3       	brcs	.-32     	; 0x830 <__DATA_REGION_LENGTH__+0x30>
	{
		st[i] = EEPROM_Read_Byte(i+30);
	};
	
	LCD_display(st);
 850:	ce 01       	movw	r24, r28
 852:	01 96       	adiw	r24, 0x01	; 1
 854:	0e 94 57 02 	call	0x4ae	; 0x4ae <LCD_display>
	//LCD_sendChar(EEPROM_Read_Byte(84));
	//LCD_sendChar(EEPROM_Read_Byte(85));
	
	
	
	ADC_init();
 858:	0e 94 36 00 	call	0x6c	; 0x6c <ADC_init>
 85c:	ff cf       	rjmp	.-2      	; 0x85c <__DATA_REGION_LENGTH__+0x5c>

0000085e <_exit>:
 85e:	f8 94       	cli

00000860 <__stop_program>:
 860:	ff cf       	rjmp	.-2      	; 0x860 <__stop_program>
